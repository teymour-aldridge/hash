[config]
skip_core_tasks = true

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_HACK_FLAGS = "--feature-powerset --exclude-features default"

[env.development]
CARGO_MAKE_CARGO_PROFILE = "dev"

[env.release]
CARGO_MAKE_CARGO_PROFILE = "release"

[env.production]
CARGO_MAKE_CARGO_PROFILE = "release"


################################################################################
## Build                                                                      ##
################################################################################
[tasks.build]
description = "Builds the crate"
category = "Build"
workspace = false
command = "cargo"
args = ["build", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]


################################################################################
## Run                                                                        ##
################################################################################
[tasks.run]
description = "Builds the binary and runs it"
category = "Run"
workspace = false
command = "cargo"
args = ["run", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]


################################################################################
## Lints                                                                      ##
################################################################################
[tasks.format]
condition = { channels = ["nightly"] }
description = "Runs rustfmt"
category = "Lint"
workspace = false
run_task = [
    { name = ["format-task-ci"] , condition = { env_true = ["CARGO_MAKE_CI" ] } },
    { name = ["format-task"] },
]

[tasks.format-task]
private = true
command = "cargo"
args = ["fmt"]
dependencies = ["install-rustfmt"]

[tasks.format-task-ci]
extend = "format-task"
args = ["fmt", "--", "--check"]

[tasks.check]
description = "Checks the code"
category = "Lint"
command = "cargo"
args = ["hack", "check", "--tests", "@@split(CARGO_HACK_FLAGS, )", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]
dependencies = ["install-cargo-hack"]

[tasks.clippy]
description = "Runs clippy"
category = "Lint"
run_task = [
    { name = ["clippy-task-ci"] , condition = { env_true = ["CARGO_MAKE_CI" ] } },
    { name = ["clippy-task"] },
]

[tasks.clippy-task]
private = true
command = "cargo"
args = ["hack", "clippy", "--no-deps", "--tests", "@@split(CARGO_HACK_FLAGS, )", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]
dependencies = ["install-cargo-hack", "install-clippy"]

[tasks.clippy-task-ci]
extend = "clippy-task"
args = ["hack", "clippy", "--no-deps", "--tests", "@@split(CARGO_HACK_FLAGS, )", "--profile", "${CARGO_MAKE_CARGO_PROFILE}", "--", "-D", "warnings"]


################################################################################
## Docs                                                                       ##
################################################################################
[tasks.doc]
condition = { channels = ["nightly"] }
description = "Builds the documentation"
category = "Docs"
workspace = false
run_task = [
    { name = ["doc-task-ci-public", "doc-task-ci-private"] , fork = true, condition = { env_true = ["CARGO_MAKE_CI" ] } },
    { name = ["doc-task"] },
]

[tasks.doc-task]
condition = { env_false = ["CARGO_MAKE_CI"] }
private = true
command = "cargo"
args = ["doc", "--workspace", "--all-features", "--no-deps"]

[tasks.doc-open]
extend = "generate-docs"
private = false
workspace = false
description = "Builds the documentation and opens then"
args = ["doc", "--workspace", "--all-features", "--no-deps", "--open"]

[tasks.doc-task-ci-public]
private = true
command = "cargo"
args = ["rustdoc", "--all-features", "--", "-Z", "unstable-options", "--check", "-D", "warnings"]

[tasks.doc-task-ci-private]
extend = "doc-task-ci-public"
args = ["rustdoc", "--all-features", "--", "-Z", "unstable-options", "--check", "--document-private-items", "-D", "warnings"]


################################################################################
## Tests                                                                      ##
################################################################################
[tasks.test]
description = "Runs the test suite"
category = "Test"
command = "cargo"
args = ["hack", "test", "--no-fail-fast", "@@split(CARGO_HACK_FLAGS, )", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]
dependencies = ["install-cargo-hack"]

[tasks.miri]
condition = { channels = ["nightly"] }
description = "Runs miri tests"
extend = "test"
args = ["hack", "miri", "test", "@@split(CARGO_HACK_FLAGS, )", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]
dependencies = ["install-cargo-hack", "install-miri"]


################################################################################
## Tools                                                                      ##
################################################################################
[tasks.install-cargo-hack]
private = true
install_crate = { crate_name = "cargo-hack", binary = "cargo", test_arg = ["hack", "--version"] }

[tasks.install-clippy]
private = true
install_crate = { rustup_component_name = "clippy" }

[tasks.install-rustfmt]
private = true
install_crate = { rustup_component_name = "rustfmt" }

[tasks.install-miri]
private = true
condition = { channels = ["nightly"] }
install_crate = { rustup_component_name = "miri" }
